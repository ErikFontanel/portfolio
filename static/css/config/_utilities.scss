$default-browser-font-size: 16px;
$base-font-size: 10px;

/// Returns the value in rem for a given pixel value.
/// @param {Number} $value - The pixel value to be converted.
/// @return {Number} The converted value in rem.

@function rem($value) {
  $unit: unit($value);

  @if $value == 0 {
    @return 0;
  } @else if $unit == 'rem' {
    @return $value;
  } @else if $unit == 'px' {
    @return $value / $base-font-size * 1rem;
  } @else if $unit == 'em' {
    @return $unit / 1em * 1rem;
  } @else {
    @error 'Value must be in px, em, or rem.';
  }
}

///
/// Calculate z-index based on list from top > bottom
///
$global-zindex: (modal, navigation, body, background) !default;

@function z-index($element, $list: $global-zindex) {
  $list: reverse($list);
  $z-index: index($list, $element) * 10;

  @if $z-index {
    @return $z-index;
  }

  @warn 'There is no item "#{$element}" in this list; choose one of: #{$list}';

  @return null;
}

//
// Helper function to reverse a sass list
//
@function reverse($list, $recursive: false) {
  $result: ();

  @for $i from length($list) * -1 through -1 {
    @if type-of(nth($list, abs($i))) == list and $recursive {
      $result: append($result, reverse(nth($list, abs($i)), $recursive));
    } @else {
      $result: append($result, nth($list, abs($i)));
    }
  }

  @return $result;
}

@mixin effect-exclusion($color: $color-text) {
  color: invert($color);
  mix-blend-mode: difference;
}
