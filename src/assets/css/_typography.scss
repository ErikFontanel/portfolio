$font-sizes: (
  extra-large: rem(57px),
  large: rem(40px),
  medium: rem(28px),
  small: rem(20px),
  extra-small: rem(16px)
);

$line-heights: (
  extra-large: 1.2,
  large: 1.5,
  medium: 1.5,
  small: 1.5
);

/// Returns the font size for a given text style and variant.
///
/// @param {String} $style - The font style.
/// @param {String} $variant [base] - The variant on the font-size.
/// @return {Number} The font-size for the text-style.
@function font-size($variant) {
  $fetched-font-size: map-get($font-sizes, $variant);

  @if type-of($fetched-font-size) {
    @return $fetched-font-size;
  } @else {
    @error 'Font size `#{$variant}` not found.';
  }
}
/// Returns the line height for a given text style and variant.
///
/// @param {String} $style - The font style.
/// @param {String} $variant [base] - The variant on the font-size.
/// @return {Number} The font-size for the text-style.
@function line-height($variant) {
  $fetched-line-height: map-get($line-heights, $variant);

  @if type-of($fetched-line-height) {
    @return $fetched-line-height;
  } @else {
    @error 'Line height `#{$variant}` not found.';
  }
}

@mixin text-style-body {
  font-family: $font-stack-base;
  font-size: font-size(medium);
  line-height: line-height(medium);
  font-weight: 400;
  font-style: normal;
  color: $color-ink;
}

@mixin text-style-small {
  font-family: $font-stack-base;
  font-size: font-size(small);
  line-height: line-height(small);
  font-weight: 400;
  font-style: normal;
  color: $color-ink;
}

@mixin text-style-medium {
  font-family: $font-stack-base;
  font-size: font-size(small);
  line-height: line-height(small);
  font-weight: 400;
  font-style: normal;
  color: $color-ink;

  @media (--medium) {
    font-size: font-size(medium);
    line-height: line-height(medium);
  }
}

@mixin text-style-large {
  font-family: $font-stack-base;
  font-size: font-size(medium);
  line-height: line-height(medium);
  font-weight: 400;
  font-style: normal;
  color: $color-ink;

  @media (--medium) {
    font-size: font-size(large);
    line-height: line-height(large);
  }
}

@mixin text-style-extra-large {
  font-family: $font-stack-base;
  font-size: font-size(large);
  line-height: line-height(extra-large);
  font-weight: 400;
  font-style: italic;
  color: $color-ink;

  @media (--medium) {
    font-size: font-size(extra-large);
    line-height: line-height(extra-large);
  }
}

.text-s {
  @include text-style-small;
}

.text-m {
  @include text-style-medium;

  margin-bottom: 0.5em;
}

.text-l {
  @include text-style-large;
}

.text-xl {
  @include text-style-extra-large;
}

a {
  text-decoration: none;
}

p > a {
  text-decoration: underline;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
  font-size: 1em;
  font-weight: 400;
}

p {
  @include text-style-medium();

  + p {
    margin-top: line-height(medium) * 1em;
  }
}

ul,
ol {
  margin: 0;

  article & {
    padding: 0;
    padding-left: calc(1 / 12 * 100% + 1em);
    padding-right: calc(1 / 12 * 100% + 1em);

    li {
      @include text-style-medium();
      list-style: none;

      + li {
        margin-top: line-height(medium) * 0.5em;
      }
    }
  }
}

h1 {
  @include text-style-extra-large();
  margin-bottom: 1em * line-height(extra-large);
}

h2 {
  @include text-style-large();
  margin-bottom: 1em * line-height(large);
}

h3 {
  @include text-style-large();
  margin-bottom: 1em * line-height(large);
  color: $color-primary;
}

h4,
h5,
h6 {
  @include text-style-medium();
  color: $color-primary;
}

figcaption {
  font-size: font-size(extra-small);
}
