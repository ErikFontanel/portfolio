:root {
  --bg: #111111;
  --btn-bg: #aaa;
  --border: #aaa;
  --red: #ff4d04;
  --blue: #ff4d04;
  --purple: #ff00ff;
  --link: #0200aa;
  --link-hover: #ff4d04;
  --link-hover-bg: #ffff55;
}

@font-face {
  font-family: 'IBM VGA8';
  src: url('./fonts/PxPlus_IBM_VGA8.woff') format('woff');
  font-style: normal;
}

@font-face {
  font-family: 'Office Code Pro', 'SF Mono', 'Droid Mono', 'Consolas', 'monaco',
    monospace;
  src: url('./fonts/OfficeCodePro-Regular.woff2') format('woff2');
  font-weight: 400;
  font-style: normal;
}

* {
  box-sizing: border-box;
}

html {
  height: 100%;
}

body {
  background-color: var(--bg);
  font-family: 'IBM VGA8';
  color: #ddd;
  font-size: 1.25rem;
  line-height: 1;
  letter-spacing: 0.05rem;
  margin: 0;
  display: grid;
  grid-template-rows: 75vh 1fr;
  grid-auto-columns: auto;
  grid-auto-rows: auto;
  grid-template-columns: 100%;
  grid-gap: 2rem;
  padding: 0 1rem 1rem;
}

::selection {
  background-color: var(--red);
  background-color: #faa;
  color: white;
}

.wrapper {
  max-width: 48ch;
  clip-path: inset(0 72em 0 0);
  animation: typing steps(72) 2.5s forwards;
  grid-row-start: 2;
}

p {
  margin-top: 0;
}

h1,
h2,
h3,
h4 {
  font-size: 1em;
  margin: 0;
  font-weight: normal;
}

h1 + p {
  margin-top: 1em;
}

h2::before,
h3::before {
  content: 'â†“ ';
}

blockquote {
  margin: 1em 0;
  color: var(--blue);
}

a {
  color: var(--link);
  text-decoration: none;
  user-select: none;
  touch-callout: none;
}

a:hover,
a:focus {
  background-color: var(--link-hover-bg);
  color: var(--link-hover);
  user-select: none;
  touch-callout: none;
  outline: none;
}

section {
  margin: 2em 0;
}

#contact {
  position: relative;
  border: 4px double var(--border);
  padding: 0.5em 1em;
  margin: 2em 0;
}

.listheader {
  color: var(--red);
  z-index: 2;
  margin: 0 auto 1em;
}

ul,
ol {
  padding: 0;
  margin: 0;
}

ol {
  counter-reset: list;
}

li {
  list-style: none;
  padding: 0.0625em 0;
  color: var(--red);
  margin: 0;
}

ol li::before {
  counter-increment: list;
}

ul li a,
ol li a {
  text-transform: uppercase;
}

li::before {
  content: counter(list);
  display: inline;
}

li a {
  display: inline-block;
  min-width: 6.5ch;
}

.btn {
  color: var(--link);
  background-color: var(--btn-bg);
  cursor: default;
  display: inline;
}

.contact li {
  display: inline-flex;
  margin: 0;
}

.collaborate {
  color: var(--purple);
  animation: blink steps(1) 1.2s reverse infinite;
}

.collaborate h3 {
  margin-top: 1em;
}

.object {
  position: relative;
  grid-row: 1 / 1;
  width: 100%;
  height: 100%;
}

canvas {
  width: 100%;
  height: 100%;
}

@keyframes blink {
  50% {
    opacity: 0;
  }
}

@keyframes typing {
  0% {
    clip-path: inset(0 0 72em 0);
  }

  100% {
    clip-path: inset(0 0 0 0);
  }
}

#friends {
  display: none;
}

.projects {
  grid-column: 1 / -1;
  margin-top: 4rem;
}

.project {
  display: grid;
  grid-template-columns: 100%;
  border-top: 6px double #333;
  padding-top: 8rem;
}

.project-gallery {
  display: grid;
  grid-template-columns: 100%;
  grid-gap: 2rem;
  width: 100%;
  overflow: hidden;
  position: relative;

  figure {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 2px solid #333;
    padding: 1rem;
    border-radius: 0.5rem;
    max-width: 100%;
    width: auto;
  }

  .desktop {
    grid-column: 1 / -1;
  }

  .mobile {
    grid-column: auto / span 1;
  }

  img {
    display: block;
    width: 100%;
    height: auto;
  }
}

@media (min-width: 96ch) {
  body {
    padding: 2rem;
    grid-template-columns: minmax(32ch, 48ch) 2fr;
    grid-template-rows: 100vh auto;
  }

  .wrapper {
    grid-row: 1 / -1;
  }

  canvas {
    position: fixed;
    z-index: 0;
    height: 100%;
    max-height: 100vh;
  }

  .project {
    grid-template-columns: minmax(24ch, 32ch) 1fr;
    grid-gap: 2rem;
    align-content: start;
    align-items: start;
    margin-bottom: 8rem;
    position: relative;
  }

  .project-info {
    grid-column: 1 / span 1;
    position: sticky;
    top: 2rem;
    height: auto;
  }

  .project-gallery {
    grid-column: auto / -1;
    grid-template-columns: repeat(3, 1fr);
  }
}
