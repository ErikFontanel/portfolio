@use 'config' as *;

.content {
  h1,
  h2,
  h3,
  h4,
  h5 {
    margin-bottom: 1.2em;

    *:not + &:not(:first-child) {
      margin-top: 2em;
    }
  }

  p {
    margin-bottom: 1.2em;
  }

  ul {
    margin: 0 0 1em;
    position: relative;
    padding-left: calc(var(--gutter) * 2);

    li {
      list-style: none;

      &:before {
        position: absolute;
        content: 'â†’';
        left: 0.5ch;
      }
    }
  }

  .button {
    --button-color: var(--color-text);
    --button-background-color: var(--color-label-background);

    &:hover {
      --button-color: var(--color-text-inverted);
      --button-background-color: var(--color-primary);
      --button-hover-border-color: var(--button-hover-border-color);
    }
  }
}

.page .content {
  > *:not(.block):not(.section):not(.section-3col):not {
    grid-column: center / wide;
  }
}

.section {
  position: relative;
  padding: var(--spacing-block) var(--gutter) 0;
  grid-column: full;

  @media (--tablet-up) {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0 var(--gutter);
    align-items: baseline;
    align-content: start;
    grid-auto-rows: auto;
  }

  &:not(:last-child) {
    color: var(--color-text-inverted);
    background-color: var(--color-background-inverted);
  }

  &:first-of-type {
    min-height: 100vmin;
    margin-top: var(--spacing-block);
    padding-bottom: calc(var(--spacing-block) * 2);
  }

  &:nth-of-type(even) {
    color: var(--color-text);
    background-color: var(--color-background);
  }

  > h1,
  > h2 {
    @include text-style-extra-large;

    @media (--tablet-up) {
      grid-column: 1;
      grid-row: 1;
      position: sticky;
      top: var(--gutter);
      margin-bottom: 0;
    }
  }
  > * {
    grid-column: 2;
    z-index: 1;
  }

  > img {
    grid-column: 1;
  }

  .canvas {
    position: absolute;
    z-index: 0;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    grid-column: auto;
  }

  .col {
    font-size: font-size(small);
    grid-column: auto / span 1;

    h3 {
      font-size: inherit;
      font-family: inherit;
      margin: 0;
      color: var(--color-text-sub);
    }

    ul {
      padding: 0;

      li::before {
        content: unset;
      }
    }
  }

  .button_large {
    margin-top: calc(var(--gutter) * 0.5);
  }
}

[data-slug='expertise'] .section:nth-of-type(2) {
  grid-template-columns: [title] 1fr repeat(3, [col] 1fr);

  > *:not(.col):not(h1):not(h2) {
    grid-column: col 1 / -1;
  }

  > h2 {
    grid-column: title / col;
  }

  .col:first-of-type {
    grid-column: col 1;
  }
}

.aside {
  font-size: font-size(extra-small);
  color: var(--color-text-sub);
  grid-column: wide / span 3;

  > h3,
  > p {
    font-family: $font-stack-monospace;
    font-size: font-size(small);
  }
}
