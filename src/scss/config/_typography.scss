/// Returns the font size for a given text style and variant.
///
/// @param {String} $style - The font style.
/// @param {String} $variant [base] - The variant on the font-size.
/// @return {Number} The font-size for the text-style.
@function font-size($variant) {
  $fetched-font-size: map-get($font-sizes, $variant);

  @if type-of($fetched-font-size) {
    @return $fetched-font-size;
  } @else {
    @error 'Font size `#{$variant}` not found.';
  }
}

/// Returns the line height for a given text style and variant.
///
/// @param {String} $style - The font style.
/// @param {String} $variant [base] - The variant on the font-size.
/// @return {Number} The font-size for the text-style.
@function line-height($variant) {
  $fetched-line-height: map-get($line-heights, $variant);

  @if type-of($fetched-line-height) {
    @return $fetched-line-height;
  } @else {
    @error 'Line height `#{$variant}` not found.';
  }
}

@mixin text-style-caption {
  font-family: $font-stack-monospace;
  font-weight: 400;
  font-style: normal;
  font-size: clamp(
    #{font-size(extra-small)},
    #{vw(font-size(extra-small))},
    #{font-size(small)}
  );
  line-height: line-height(caption);
}

@mixin text-style-body {
  font-family: $font-stack-base;
  font-weight: 400;
  font-style: normal;
  font-size: clamp(
    #{font-size(small)},
    #{vw(font-size(medium))},
    #{font-size(large)}
  );
  line-height: clamp(
    #{line-height(extra-small)},
    #{line-height(small)},
    #{line-height(medium)}
  );
}

@mixin text-style-small {
  font-family: $font-stack-base;
  font-weight: 400;
  font-style: normal;
  font-size: clamp(
    #{font-size(extra-small)},
    #{vw(font-size(small))},
    #{font-size(small)}
  );
  line-height: line-height(small);
}

@mixin text-style-medium {
  font-family: $font-stack-base;
  font-weight: 400;
  font-style: normal;
  font-size: clamp(
    #{font-size(small)},
    #{vw(font-size(medium))},
    #{font-size(large)}
  );
  line-height: line-height(medium);
}

@mixin text-style-large {
  font-family: $font-stack-base;
  font-size: clamp(
    #{font-size(small)},
    #{vw(font-size(large))},
    #{font-size(extra-large)}
  );
  line-height: line-height(extra-large);
}

@mixin text-style-extra-large {
  font-family: $font-stack-base;
  font-size: clamp(
    #{font-size(large)},
    #{vw(font-size(extra-large))},
    #{font-size(extra-large)}
  );
  line-height: line-height(extra-large);
  font-weight: 500;
}

@mixin text-style-extra-extra-large {
  font-family: $font-stack-base;
  font-size: clamp(
    #{font-size(extra-large)},
    #{vw(font-size(extra-extra-large))},
    #{font-size(extra-extra-large)}
  );
  font-variation-settings: 'wght' 420, 'slnt' -8;
  line-height: line-height(extra-extra-large);
}

@mixin text-style-link {
  color: inherit;
  text-decoration: none;
  border-bottom: rem(1px) solid $color-sky;

  &:visited {
    color: inherit;
  }

  &:hover {
    color: $color-primary;
    border-color: currentColor;
  }

  &:active {
    color: $color-primary;
    border-color: currentColor;
  }

  &:focus {
    color: $color-primary;
    border-color: currentColor;
  }
}
